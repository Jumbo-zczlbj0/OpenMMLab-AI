2023-02-07 01:20:08,425 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3080 Laptop GPU
CUDA_HOME: /home/jumbo/miniconda3/envs/mmlab1
NVCC: Cuda compilation tools, release 11.7, V11.7.99
GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
PyTorch: 1.13.1
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.1
OpenCV: 4.7.0
MMCV: 1.7.1
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.7
MMClassification: 0.25.0+
------------------------------------------------------------

2023-02-07 01:20:08,425 - mmcls - INFO - Distributed training: False
2023-02-07 01:20:08,739 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet_CIFAR',
        depth=18,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=10,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'CIFAR10'
img_norm_cfg = dict(
    mean=[125.307, 122.961, 113.8575],
    std=[51.5865, 50.847, 51.255],
    to_rgb=False)
train_pipeline = [
    dict(type='RandomCrop', size=32, padding=4),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[125.307, 122.961, 113.8575],
        std=[51.5865, 50.847, 51.255],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(
        type='Normalize',
        mean=[125.307, 122.961, 113.8575],
        std=[51.5865, 50.847, 51.255],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=2,
    train=dict(
        type='CIFAR10',
        data_prefix=
        '/home/jumbo/音乐/mmclassification-master/data/cifar-10-python',
        pipeline=[
            dict(type='RandomCrop', size=32, padding=4),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='CIFAR10',
        data_prefix=
        '/home/jumbo/音乐/mmclassification-master/data/cifar-10-python',
        pipeline=[
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True),
    test=dict(
        type='CIFAR10',
        data_prefix=
        '/home/jumbo/音乐/mmclassification-master/data/cifar-10-python',
        pipeline=[
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True))
evaluation = dict(
    interval=1, metric='accuracy', metric_options=dict(topk=(1, )))
optimizer = dict(type='SGD', lr=0.0001, momentum=0.9, weight_decay=4e-05)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='CosineAnnealing', min_lr_ratio=1e-05)
runner = dict(type='EpochBasedRunner', max_epochs=100)
checkpoint_config = dict(interval=1)
log_config = dict(
    interval=100,
    hooks=[
        dict(
            type='MMClsWandbHook',
            init_kwargs=dict(
                entity='1179685746', project='restnet18_02_07_01'),
            log_checkpoint=True,
            log_checkpoint_metadata=True,
            num_eval_images=100)
    ])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/jumbo/音乐/mmclassification-master/checkpoints/resnet18_b16x8_cifar10_20210528-bd6371c8.pth'
resume_from = None
workflow = [('train', 1)]
work_dir = 'work/resnet18/test_1'
gpu_ids = [0]

2023-02-07 01:20:08,739 - mmcls - INFO - Set random seed to 2033067466, deterministic: False
2023-02-07 01:20:10,545 - mmcls - INFO - load checkpoint from local path: /home/jumbo/音乐/mmclassification-master/checkpoints/resnet18_b16x8_cifar10_20210528-bd6371c8.pth
2023-02-07 01:20:10,563 - mmcls - INFO - Start running, host: jumbo@jumbo-Legion-7-16ITHg6, work_dir: /home/jumbo/音乐/mmclassification-master/work/resnet18/test_1
2023-02-07 01:20:10,563 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) MMClsWandbHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) MMClsWandbHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) MMClsWandbHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) MMClsWandbHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) MMClsWandbHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) MMClsWandbHook                     
 -------------------- 
after_run:
(VERY_LOW    ) MMClsWandbHook                     
 -------------------- 
2023-02-07 01:20:10,563 - mmcls - INFO - workflow: [('train', 1)], max: 100 epochs
2023-02-07 01:20:10,563 - mmcls - INFO - Checkpoints will be saved to /home/jumbo/音乐/mmclassification-master/work/resnet18/test_1 by HardDiskBackend.
2023-02-07 01:21:07,818 - mmcls - INFO - Saving checkpoint at 1 epochs
2023-02-07 01:21:46,467 - mmcls - INFO - Saving checkpoint at 2 epochs
2023-02-07 01:22:25,206 - mmcls - INFO - Saving checkpoint at 3 epochs
2023-02-07 01:23:04,028 - mmcls - INFO - Saving checkpoint at 4 epochs
2023-02-07 01:23:43,096 - mmcls - INFO - Saving checkpoint at 5 epochs
2023-02-07 01:24:21,843 - mmcls - INFO - Saving checkpoint at 6 epochs
2023-02-07 01:25:01,706 - mmcls - INFO - Saving checkpoint at 7 epochs
2023-02-07 01:25:40,735 - mmcls - INFO - Saving checkpoint at 8 epochs
2023-02-07 01:26:19,671 - mmcls - INFO - Saving checkpoint at 9 epochs
2023-02-07 01:26:58,479 - mmcls - INFO - Saving checkpoint at 10 epochs
2023-02-07 01:27:37,587 - mmcls - INFO - Saving checkpoint at 11 epochs
2023-02-07 01:28:16,430 - mmcls - INFO - Saving checkpoint at 12 epochs
2023-02-07 01:28:55,283 - mmcls - INFO - Saving checkpoint at 13 epochs
2023-02-07 01:29:34,155 - mmcls - INFO - Saving checkpoint at 14 epochs
2023-02-07 01:30:12,952 - mmcls - INFO - Saving checkpoint at 15 epochs
2023-02-07 01:30:51,916 - mmcls - INFO - Saving checkpoint at 16 epochs
2023-02-07 01:31:37,687 - mmcls - INFO - Saving checkpoint at 17 epochs
2023-02-07 01:32:16,555 - mmcls - INFO - Saving checkpoint at 18 epochs
2023-02-07 01:32:55,473 - mmcls - INFO - Saving checkpoint at 19 epochs
2023-02-07 01:33:34,584 - mmcls - INFO - Saving checkpoint at 20 epochs
2023-02-07 01:34:13,459 - mmcls - INFO - Saving checkpoint at 21 epochs
2023-02-07 01:34:52,668 - mmcls - INFO - Saving checkpoint at 22 epochs
2023-02-07 01:35:31,700 - mmcls - INFO - Saving checkpoint at 23 epochs
2023-02-07 01:36:10,683 - mmcls - INFO - Saving checkpoint at 24 epochs
2023-02-07 01:36:49,704 - mmcls - INFO - Saving checkpoint at 25 epochs
2023-02-07 01:37:28,873 - mmcls - INFO - Saving checkpoint at 26 epochs
2023-02-07 01:38:07,832 - mmcls - INFO - Saving checkpoint at 27 epochs
2023-02-07 01:38:47,356 - mmcls - INFO - Saving checkpoint at 28 epochs
2023-02-07 01:39:26,318 - mmcls - INFO - Saving checkpoint at 29 epochs
2023-02-07 01:40:11,054 - mmcls - INFO - Saving checkpoint at 30 epochs
2023-02-07 01:40:49,924 - mmcls - INFO - Saving checkpoint at 31 epochs
2023-02-07 01:41:28,659 - mmcls - INFO - Saving checkpoint at 32 epochs
2023-02-07 01:42:07,956 - mmcls - INFO - Saving checkpoint at 33 epochs
2023-02-07 01:42:47,407 - mmcls - INFO - Saving checkpoint at 34 epochs
2023-02-07 01:43:27,597 - mmcls - INFO - Saving checkpoint at 35 epochs
2023-02-07 01:44:07,266 - mmcls - INFO - Saving checkpoint at 36 epochs
2023-02-07 01:44:46,128 - mmcls - INFO - Saving checkpoint at 37 epochs
2023-02-07 01:45:25,151 - mmcls - INFO - Saving checkpoint at 38 epochs
2023-02-07 01:46:04,774 - mmcls - INFO - Saving checkpoint at 39 epochs
2023-02-07 01:46:43,726 - mmcls - INFO - Saving checkpoint at 40 epochs
2023-02-07 01:47:22,866 - mmcls - INFO - Saving checkpoint at 41 epochs
2023-02-07 01:48:01,810 - mmcls - INFO - Saving checkpoint at 42 epochs
2023-02-07 01:48:41,515 - mmcls - INFO - Saving checkpoint at 43 epochs
2023-02-07 01:49:20,652 - mmcls - INFO - Saving checkpoint at 44 epochs
2023-02-07 01:49:59,943 - mmcls - INFO - Saving checkpoint at 45 epochs
2023-02-07 01:50:39,492 - mmcls - INFO - Saving checkpoint at 46 epochs
2023-02-07 01:51:27,460 - mmcls - INFO - Saving checkpoint at 47 epochs
2023-02-07 01:52:06,311 - mmcls - INFO - Saving checkpoint at 48 epochs
2023-02-07 01:52:45,291 - mmcls - INFO - Saving checkpoint at 49 epochs
2023-02-07 01:53:24,382 - mmcls - INFO - Saving checkpoint at 50 epochs
2023-02-07 01:54:03,728 - mmcls - INFO - Saving checkpoint at 51 epochs
2023-02-07 01:54:42,814 - mmcls - INFO - Saving checkpoint at 52 epochs
2023-02-07 01:55:22,029 - mmcls - INFO - Saving checkpoint at 53 epochs
2023-02-07 01:56:07,465 - mmcls - INFO - Saving checkpoint at 54 epochs
2023-02-07 01:56:47,934 - mmcls - INFO - Saving checkpoint at 55 epochs
2023-02-07 01:57:26,533 - mmcls - INFO - Saving checkpoint at 56 epochs
2023-02-07 01:58:05,499 - mmcls - INFO - Saving checkpoint at 57 epochs
2023-02-07 01:58:44,544 - mmcls - INFO - Saving checkpoint at 58 epochs
2023-02-07 01:59:23,728 - mmcls - INFO - Saving checkpoint at 59 epochs
2023-02-07 02:00:02,798 - mmcls - INFO - Saving checkpoint at 60 epochs
2023-02-07 02:00:47,374 - mmcls - INFO - Saving checkpoint at 61 epochs
2023-02-07 02:01:26,212 - mmcls - INFO - Saving checkpoint at 62 epochs
2023-02-07 02:02:05,091 - mmcls - INFO - Saving checkpoint at 63 epochs
2023-02-07 02:02:44,015 - mmcls - INFO - Saving checkpoint at 64 epochs
2023-02-07 02:03:33,822 - mmcls - INFO - Saving checkpoint at 65 epochs
2023-02-07 02:04:12,702 - mmcls - INFO - Saving checkpoint at 66 epochs
2023-02-07 02:04:51,721 - mmcls - INFO - Saving checkpoint at 67 epochs
2023-02-07 02:05:30,689 - mmcls - INFO - Saving checkpoint at 68 epochs
2023-02-07 02:06:10,370 - mmcls - INFO - Saving checkpoint at 69 epochs
2023-02-07 02:06:49,419 - mmcls - INFO - Saving checkpoint at 70 epochs
2023-02-07 02:07:28,821 - mmcls - INFO - Saving checkpoint at 71 epochs
2023-02-07 02:08:08,674 - mmcls - INFO - Saving checkpoint at 72 epochs
2023-02-07 02:08:47,540 - mmcls - INFO - Saving checkpoint at 73 epochs
2023-02-07 02:09:26,415 - mmcls - INFO - Saving checkpoint at 74 epochs
2023-02-07 02:10:05,317 - mmcls - INFO - Saving checkpoint at 75 epochs
2023-02-07 02:10:44,125 - mmcls - INFO - Saving checkpoint at 76 epochs
2023-02-07 02:11:22,921 - mmcls - INFO - Saving checkpoint at 77 epochs
2023-02-07 02:12:01,554 - mmcls - INFO - Saving checkpoint at 78 epochs
2023-02-07 02:12:40,278 - mmcls - INFO - Saving checkpoint at 79 epochs
2023-02-07 02:13:19,393 - mmcls - INFO - Saving checkpoint at 80 epochs
2023-02-07 02:13:58,125 - mmcls - INFO - Saving checkpoint at 81 epochs
2023-02-07 02:14:36,857 - mmcls - INFO - Saving checkpoint at 82 epochs
2023-02-07 02:15:15,866 - mmcls - INFO - Saving checkpoint at 83 epochs
2023-02-07 02:15:54,540 - mmcls - INFO - Saving checkpoint at 84 epochs
2023-02-07 02:16:33,353 - mmcls - INFO - Saving checkpoint at 85 epochs
2023-02-07 02:17:12,170 - mmcls - INFO - Saving checkpoint at 86 epochs
2023-02-07 02:17:51,099 - mmcls - INFO - Saving checkpoint at 87 epochs
2023-02-07 02:18:29,998 - mmcls - INFO - Saving checkpoint at 88 epochs
2023-02-07 02:19:09,400 - mmcls - INFO - Saving checkpoint at 89 epochs
2023-02-07 02:19:48,246 - mmcls - INFO - Saving checkpoint at 90 epochs
2023-02-07 02:20:27,174 - mmcls - INFO - Saving checkpoint at 91 epochs
2023-02-07 02:21:06,065 - mmcls - INFO - Saving checkpoint at 92 epochs
2023-02-07 02:21:45,044 - mmcls - INFO - Saving checkpoint at 93 epochs
2023-02-07 02:22:24,050 - mmcls - INFO - Saving checkpoint at 94 epochs
2023-02-07 02:23:02,963 - mmcls - INFO - Saving checkpoint at 95 epochs
2023-02-07 02:23:42,064 - mmcls - INFO - Saving checkpoint at 96 epochs
2023-02-07 02:24:20,826 - mmcls - INFO - Saving checkpoint at 97 epochs
2023-02-07 02:24:59,640 - mmcls - INFO - Saving checkpoint at 98 epochs
2023-02-07 02:25:39,065 - mmcls - INFO - Saving checkpoint at 99 epochs
2023-02-07 02:26:18,653 - mmcls - INFO - Saving checkpoint at 100 epochs
