2023/02/12 22:04:50 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 0
    GPU 0: NVIDIA GeForce RTX 3080 Laptop GPU
    CUDA_HOME: /home/jumbo/miniconda3/envs/test
    NVCC: Cuda compilation tools, release 11.7, V11.7.99
    GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.7.0
    MMEngine: 0.5.0

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 0
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/02/12 22:04:50 - mmengine - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
data_preprocessor = dict(
    type='SegDataPreProcessor',
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=True,
    pad_val=0,
    seg_pad_val=255,
    size=(512, 1024))
model = dict(
    type='EncoderDecoder',
    data_preprocessor=dict(
        type='SegDataPreProcessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True,
        pad_val=0,
        seg_pad_val=255,
        size=(256, 256)),
    pretrained='open-mmlab://resnet50_v1c',
    backbone=dict(
        type='ResNetV1c',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        dilations=(1, 1, 2, 4),
        strides=(1, 2, 1, 1),
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=False,
        style='pytorch',
        contract_dilation=True),
    decode_head=dict(
        type='PSPHead',
        in_channels=2048,
        in_index=3,
        channels=512,
        pool_scales=(1, 2, 3, 6),
        dropout_ratio=0.1,
        num_classes=2,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=dict(
        type='FCNHead',
        in_channels=1024,
        in_index=2,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=2,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'StanfordBackgroundDataset'
data_root = 'Glomeruli-dataset'
crop_size = (256, 256)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        type='RandomResize',
        scale=(320, 240),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(256, 256), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PackSegInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', scale=(320, 240), keep_ratio=True),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs')
]
img_ratios = [0.5, 0.75, 1.0, 1.25, 1.5, 1.75]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=dict(backend='local')),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale_factor': 0.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 0.75,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.0,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.25,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.5,
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale_factor': 1.75,
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 0.0,
                        'direction': 'horizontal'
                    }, {
                        'type': 'RandomFlip',
                        'prob': 1.0,
                        'direction': 'horizontal'
                    }], [{
                        'type': 'LoadAnnotations'
                    }], [{
                        'type': 'PackSegInputs'
                    }]])
]
train_dataloader = dict(
    batch_size=2,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(type='InfiniteSampler', shuffle=True),
    dataset=dict(
        type='StanfordBackgroundDataset',
        data_root='Glomeruli-dataset',
        data_prefix=dict(img_path='images', seg_map_path='masks'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='RandomResize',
                scale=(320, 240),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(256, 256), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PackSegInputs')
        ],
        ann_file='splits/train.txt'))
val_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='StanfordBackgroundDataset',
        data_root='Glomeruli-dataset',
        data_prefix=dict(img_path='images', seg_map_path='masks'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(320, 240), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ],
        ann_file='splits/val.txt'))
test_dataloader = dict(
    batch_size=1,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='StanfordBackgroundDataset',
        data_root='Glomeruli-dataset',
        data_prefix=dict(img_path='images', seg_map_path='masks'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', scale=(320, 240), keep_ratio=True),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs')
        ],
        ann_file='splits/val.txt'))
val_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
test_evaluator = dict(type='IoUMetric', iou_metrics=['mIoU'])
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='SegLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(by_epoch=False)
log_level = 'INFO'
load_from = '/home/jumbo/图片/test/mmsegmentation/pspnet_r50-d8_512x1024_80k_cityscapes_20200606_112131-2376f12b.pth'
resume = False
tta_model = dict(type='SegTTAModel')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005),
    clip_grad=None)
param_scheduler = [
    dict(
        type='PolyLR',
        eta_min=0.0001,
        power=0.9,
        begin=0,
        end=80000,
        by_epoch=False)
]
train_cfg = dict(type='IterBasedTrainLoop', max_iters=100, val_interval=10)
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=10, log_metric_by_epoch=False),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', by_epoch=False, interval=10),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='SegVisualizationHook'))
work_dir = './work_dirs/tutorial'
randomness = dict(seed=0)

2023/02/12 22:04:50 - mmengine - WARNING - The "visualizer" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:50 - mmengine - WARNING - The "vis_backend" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:50 - mmengine - WARNING - The "model" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:51 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/02/12 22:04:51 - mmengine - WARNING - The "hook" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:51 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/02/12 22:04:58 - mmengine - WARNING - The "loop" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - WARNING - The "dataset" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - WARNING - The "transform" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - WARNING - The "data sampler" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - WARNING - The "optimizer wrapper constructor" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - WARNING - The "optimizer" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - WARNING - The "optim_wrapper" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - WARNING - The "parameter scheduler" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - WARNING - The "metric" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - WARNING - The "weight initializer" registry in mmseg did not set import location. Fallback to call `mmseg.utils.register_all_modules` instead.
2023/02/12 22:04:58 - mmengine - INFO - load model from: open-mmlab://resnet50_v1c
2023/02/12 22:04:58 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://resnet50_v1c
2023/02/12 22:04:58 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.stem.0.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.1.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.1.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.3.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.4.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.4.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.6.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.7.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.stem.7.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnet50_v1c 

decode_head.conv_seg.weight - torch.Size([2, 512, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.psp_modules.0.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.conv.weight - torch.Size([512, 2048, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.conv.weight - torch.Size([512, 4096, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.bottleneck.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.conv_seg.weight - torch.Size([2, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.conv_seg.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.convs.0.conv.weight - torch.Size([256, 1024, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023/02/12 22:04:58 - mmengine - INFO - Load checkpoint from /home/jumbo/图片/test/mmsegmentation/pspnet_r50-d8_512x1024_80k_cityscapes_20200606_112131-2376f12b.pth
2023/02/12 22:04:58 - mmengine - INFO - Checkpoints will be saved to /home/jumbo/图片/test/mmsegmentation/work_dirs/tutorial.
2023/02/12 22:05:04 - mmengine - INFO - Iter(train) [ 10/100]  lr: 9.9990e-03  eta: 0:00:52  time: 0.5825  data_time: 0.0019  memory: 9549  loss: 0.4680  decode.loss_ce: 0.3169  decode.acc_seg: 90.4891  aux.loss_ce: 0.1511  aux.acc_seg: 90.4891
2023/02/12 22:05:04 - mmengine - INFO - Saving checkpoint at 10 iterations
2023/02/12 22:05:07 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:01:17  time: 0.1532  data_time: 0.0186  memory: 9331  
2023/02/12 22:05:07 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:41  time: 0.0158  data_time: 0.0017  memory: 721  
2023/02/12 22:05:07 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:29  time: 0.0150  data_time: 0.0016  memory: 721  
2023/02/12 22:05:07 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:23  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:07 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:19  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:07 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:17  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:07 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:15  time: 0.0150  data_time: 0.0016  memory: 721  
2023/02/12 22:05:08 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:14  time: 0.0150  data_time: 0.0016  memory: 721  
2023/02/12 22:05:08 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:12  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:08 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:11  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:08 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:11  time: 0.0152  data_time: 0.0018  memory: 721  
2023/02/12 22:05:08 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:10  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:08 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:09  time: 0.0154  data_time: 0.0017  memory: 721  
2023/02/12 22:05:09 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:09  time: 0.0153  data_time: 0.0017  memory: 721  
2023/02/12 22:05:09 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:08  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:05:09 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:08  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:09 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:08  time: 0.0152  data_time: 0.0017  memory: 721  
2023/02/12 22:05:09 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:07  time: 0.0152  data_time: 0.0019  memory: 721  
2023/02/12 22:05:09 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:07  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:09 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:06  time: 0.0153  data_time: 0.0018  memory: 721  
2023/02/12 22:05:10 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:06  time: 0.0150  data_time: 0.0016  memory: 721  
2023/02/12 22:05:10 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:10 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:06  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:10 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:05  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:10 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:05  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:10 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:05  time: 0.0158  data_time: 0.0018  memory: 721  
2023/02/12 22:05:10 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:04  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:05:11 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:04  time: 0.0153  data_time: 0.0017  memory: 721  
2023/02/12 22:05:11 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:04  time: 0.0154  data_time: 0.0018  memory: 721  
2023/02/12 22:05:11 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:04  time: 0.0155  data_time: 0.0017  memory: 721  
2023/02/12 22:05:11 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:04  time: 0.0158  data_time: 0.0020  memory: 721  
2023/02/12 22:05:11 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:03  time: 0.0166  data_time: 0.0021  memory: 721  
2023/02/12 22:05:11 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:03  time: 0.0166  data_time: 0.0021  memory: 721  
2023/02/12 22:05:12 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:03  time: 0.0164  data_time: 0.0021  memory: 721  
2023/02/12 22:05:12 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:03  time: 0.0165  data_time: 0.0021  memory: 721  
2023/02/12 22:05:12 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0164  data_time: 0.0020  memory: 721  
2023/02/12 22:05:12 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0157  data_time: 0.0019  memory: 721  
2023/02/12 22:05:12 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0152  data_time: 0.0018  memory: 721  
2023/02/12 22:05:12 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:02  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:13 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:02  time: 0.0152  data_time: 0.0017  memory: 721  
2023/02/12 22:05:13 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0157  data_time: 0.0018  memory: 721  
2023/02/12 22:05:13 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0160  data_time: 0.0019  memory: 721  
2023/02/12 22:05:13 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0160  data_time: 0.0018  memory: 721  
2023/02/12 22:05:13 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0152  data_time: 0.0018  memory: 721  
2023/02/12 22:05:13 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:01  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:13 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:01  time: 0.0152  data_time: 0.0017  memory: 721  
2023/02/12 22:05:14 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0157  data_time: 0.0017  memory: 721  
2023/02/12 22:05:14 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0164  data_time: 0.0019  memory: 721  
2023/02/12 22:05:14 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0166  data_time: 0.0019  memory: 721  
2023/02/12 22:05:14 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0154  data_time: 0.0018  memory: 721  
2023/02/12 22:05:14 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:14 - mmengine - INFO - per class results:
2023/02/12 22:05:14 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:05:14 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
2023/02/12 22:05:15 - mmengine - INFO - Iter(train) [ 20/100]  lr: 9.9979e-03  eta: 0:00:26  time: 0.0726  data_time: 0.0035  memory: 1577  loss: 0.2738  decode.loss_ce: 0.1907  decode.acc_seg: 77.7000  aux.loss_ce: 0.0831  aux.acc_seg: 77.7000
2023/02/12 22:05:15 - mmengine - INFO - Saving checkpoint at 20 iterations
2023/02/12 22:05:16 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:00:09  time: 0.0180  data_time: 0.0047  memory: 721  
2023/02/12 22:05:16 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:08  time: 0.0157  data_time: 0.0018  memory: 721  
2023/02/12 22:05:16 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:07  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:16 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:07  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:17 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:17 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:07  time: 0.0152  data_time: 0.0017  memory: 721  
2023/02/12 22:05:17 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:06  time: 0.0157  data_time: 0.0018  memory: 721  
2023/02/12 22:05:17 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:06  time: 0.0152  data_time: 0.0017  memory: 721  
2023/02/12 22:05:17 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:06  time: 0.0157  data_time: 0.0020  memory: 721  
2023/02/12 22:05:17 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:06  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:17 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:06  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:18 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:06  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:05:18 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:05  time: 0.0162  data_time: 0.0020  memory: 721  
2023/02/12 22:05:18 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:05  time: 0.0155  data_time: 0.0019  memory: 721  
2023/02/12 22:05:18 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:05  time: 0.0157  data_time: 0.0020  memory: 721  
2023/02/12 22:05:18 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:05  time: 0.0157  data_time: 0.0019  memory: 721  
2023/02/12 22:05:18 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:05  time: 0.0158  data_time: 0.0020  memory: 721  
2023/02/12 22:05:19 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:05  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:19 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:05  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:19 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:04  time: 0.0154  data_time: 0.0018  memory: 721  
2023/02/12 22:05:19 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:04  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:05:19 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:04  time: 0.0150  data_time: 0.0016  memory: 721  
2023/02/12 22:05:19 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:20 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:04  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:20 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:20 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:20 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:20 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:20 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:20 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:03  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:21 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:21 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:21 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:21 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:02  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:21 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:21 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:21 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:22 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:22 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:22 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:01  time: 0.0152  data_time: 0.0017  memory: 721  
2023/02/12 22:05:22 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0157  data_time: 0.0019  memory: 721  
2023/02/12 22:05:22 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:22 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:22 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:23 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:00  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:05:23 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:23 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:23 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:23 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:23 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0153  data_time: 0.0018  memory: 721  
2023/02/12 22:05:24 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:24 - mmengine - INFO - per class results:
2023/02/12 22:05:24 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:05:24 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
2023/02/12 22:05:24 - mmengine - INFO - Iter(train) [ 30/100]  lr: 9.9968e-03  eta: 0:00:16  time: 0.0714  data_time: 0.0028  memory: 1576  loss: 0.1901  decode.loss_ce: 0.1436  decode.acc_seg: 89.2892  aux.loss_ce: 0.0465  aux.acc_seg: 89.2892
2023/02/12 22:05:24 - mmengine - INFO - Saving checkpoint at 30 iterations
2023/02/12 22:05:25 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:00:09  time: 0.0180  data_time: 0.0046  memory: 721  
2023/02/12 22:05:25 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:08  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:25 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:07  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:26 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:07  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:05:26 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:07  time: 0.0152  data_time: 0.0017  memory: 721  
2023/02/12 22:05:26 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:26 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:06  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:26 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:06  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:05:26 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:26 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:27 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:27 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:06  time: 0.0155  data_time: 0.0017  memory: 721  
2023/02/12 22:05:27 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:05  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:05:27 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:05  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:27 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:27 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:28 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:05  time: 0.0154  data_time: 0.0018  memory: 721  
2023/02/12 22:05:28 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:05  time: 0.0152  data_time: 0.0018  memory: 721  
2023/02/12 22:05:28 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:04  time: 0.0153  data_time: 0.0018  memory: 721  
2023/02/12 22:05:28 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:28 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:28 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:28 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:29 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:04  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:29 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:29 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:29 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:29 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:29 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:29 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:30 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:30 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:30 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:30 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:02  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:30 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:30 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:31 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:31 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:31 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:31 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:31 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:31 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:05:31 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:32 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:05:32 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:32 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:32 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:32 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:32 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:32 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:33 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:33 - mmengine - INFO - per class results:
2023/02/12 22:05:33 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:05:33 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
2023/02/12 22:05:33 - mmengine - INFO - Iter(train) [ 40/100]  lr: 9.9957e-03  eta: 0:00:11  time: 0.0714  data_time: 0.0029  memory: 1576  loss: 0.0770  decode.loss_ce: 0.0524  decode.acc_seg: 100.0000  aux.loss_ce: 0.0246  aux.acc_seg: 100.0000
2023/02/12 22:05:33 - mmengine - INFO - Saving checkpoint at 40 iterations
2023/02/12 22:05:34 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:00:09  time: 0.0188  data_time: 0.0054  memory: 721  
2023/02/12 22:05:34 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:08  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:35 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:07  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:35 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:35 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:07  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:35 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:07  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:35 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:35 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:06  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:35 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:36 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:36 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:36 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:36 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:36 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:36 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:37 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:37 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:05  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:37 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:37 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:37 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:04  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:37 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:37 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:38 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:38 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:38 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:38 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:38 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:05:38 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:38 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:05:39 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:39 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:39 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:39 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:39 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:02  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:39 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:39 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:40 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:05:40 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:40 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:40 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:01  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:40 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:40 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:41 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:41 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:41 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:41 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:41 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:41 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:41 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:42 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:42 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:42 - mmengine - INFO - per class results:
2023/02/12 22:05:42 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:05:42 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
2023/02/12 22:05:43 - mmengine - INFO - Iter(train) [ 50/100]  lr: 9.9945e-03  eta: 0:00:08  time: 0.0713  data_time: 0.0028  memory: 1576  loss: 0.0704  decode.loss_ce: 0.0508  decode.acc_seg: 95.4380  aux.loss_ce: 0.0196  aux.acc_seg: 95.4380
2023/02/12 22:05:43 - mmengine - INFO - Saving checkpoint at 50 iterations
2023/02/12 22:05:43 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:00:09  time: 0.0180  data_time: 0.0047  memory: 721  
2023/02/12 22:05:44 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:08  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:44 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:44 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:07  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:44 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:07  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:44 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:06  time: 0.0147  data_time: 0.0015  memory: 721  
2023/02/12 22:05:44 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:44 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:45 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:06  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:05:45 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:45 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:45 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:45 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:45 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:45 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:46 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:46 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:46 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0018  memory: 721  
2023/02/12 22:05:46 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:46 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:46 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:46 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:47 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:47 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:47 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:47 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:47 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:47 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:48 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:05:48 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:48 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:48 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:48 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:48 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:48 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:49 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:49 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:49 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:49 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:49 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:49 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:49 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:50 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:50 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:50 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:50 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:50 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:50 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:51 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:51 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:05:51 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:05:51 - mmengine - INFO - per class results:
2023/02/12 22:05:51 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:05:51 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
2023/02/12 22:05:52 - mmengine - INFO - Iter(train) [ 60/100]  lr: 9.9934e-03  eta: 0:00:06  time: 0.0716  data_time: 0.0028  memory: 1576  loss: 0.1558  decode.loss_ce: 0.1147  decode.acc_seg: 100.0000  aux.loss_ce: 0.0412  aux.acc_seg: 100.0000
2023/02/12 22:05:52 - mmengine - INFO - Saving checkpoint at 60 iterations
2023/02/12 22:05:52 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:00:09  time: 0.0179  data_time: 0.0047  memory: 721  
2023/02/12 22:05:53 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:08  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:53 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:53 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:07  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:53 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:53 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:53 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:53 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:06  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:54 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:54 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:54 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:54 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:54 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:05  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:54 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:05  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:55 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:55 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:05  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:55 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:55 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:55 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:55 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:04  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:55 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:56 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:05:56 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:56 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:56 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:56 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:56 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:56 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:57 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:57 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:57 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:05:57 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:57 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:57 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:05:58 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:02  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:58 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:58 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:05:58 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:05:58 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:58 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:01  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:58 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:59 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:59 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:59 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:05:59 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:59 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:05:59 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:05:59 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:00 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:00 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:00 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:00 - mmengine - INFO - per class results:
2023/02/12 22:06:00 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:06:00 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
2023/02/12 22:06:01 - mmengine - INFO - Iter(train) [ 70/100]  lr: 9.9923e-03  eta: 0:00:04  time: 0.0717  data_time: 0.0028  memory: 1576  loss: 0.0465  decode.loss_ce: 0.0323  decode.acc_seg: 100.0000  aux.loss_ce: 0.0142  aux.acc_seg: 100.0000
2023/02/12 22:06:01 - mmengine - INFO - Saving checkpoint at 70 iterations
2023/02/12 22:06:01 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:00:09  time: 0.0179  data_time: 0.0047  memory: 721  
2023/02/12 22:06:02 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:08  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:02 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:07  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:02 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:07  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:02 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:02 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:02 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:03 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:06:03 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:03 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:03 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:03 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:03 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:03 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:04 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:04 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:04 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:04 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:04 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:04 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:04 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:05 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:04  time: 0.0150  data_time: 0.0016  memory: 721  
2023/02/12 22:06:05 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:04  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:05 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:05 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:05 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:05 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:06 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:06 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:06 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:06 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:03  time: 0.0155  data_time: 0.0019  memory: 721  
2023/02/12 22:06:06 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:06 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:06 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:02  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:07 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:07 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:07 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:07 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:07 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:01  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:07 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:07 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:06:08 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:08 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:08 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:08 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:08 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:08 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:09 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:06:09 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:09 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:06:09 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:09 - mmengine - INFO - per class results:
2023/02/12 22:06:09 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:06:09 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
2023/02/12 22:06:10 - mmengine - INFO - Iter(train) [ 80/100]  lr: 9.9912e-03  eta: 0:00:02  time: 0.0716  data_time: 0.0029  memory: 1576  loss: 0.0853  decode.loss_ce: 0.0627  decode.acc_seg: 92.2348  aux.loss_ce: 0.0227  aux.acc_seg: 92.2348
2023/02/12 22:06:10 - mmengine - INFO - Saving checkpoint at 80 iterations
2023/02/12 22:06:11 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:00:09  time: 0.0180  data_time: 0.0047  memory: 721  
2023/02/12 22:06:11 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:08  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:06:11 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:07  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:11 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:07  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:06:11 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:07  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:11 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:11 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:12 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:06  time: 0.0152  data_time: 0.0017  memory: 721  
2023/02/12 22:06:12 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:12 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:06  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:12 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:06:12 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:12 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:05  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:06:13 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:05  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:13 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:05  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:06:13 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:13 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:13 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:13 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:13 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:14 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:14 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:14 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:14 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:14 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:03  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:14 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:14 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:15 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:15 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:15 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:15 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:03  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:15 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:15 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:02  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:16 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:16 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:16 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:16 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:16 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:16 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:16 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:06:17 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:06:17 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:17 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:17 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:17 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:06:17 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:17 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0153  data_time: 0.0019  memory: 721  
2023/02/12 22:06:18 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0151  data_time: 0.0019  memory: 721  
2023/02/12 22:06:18 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:18 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:06:18 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:18 - mmengine - INFO - per class results:
2023/02/12 22:06:18 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:06:18 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
2023/02/12 22:06:19 - mmengine - INFO - Iter(train) [ 90/100]  lr: 9.9901e-03  eta: 0:00:01  time: 0.0727  data_time: 0.0038  memory: 1576  loss: 0.1269  decode.loss_ce: 0.0970  decode.acc_seg: 100.0000  aux.loss_ce: 0.0299  aux.acc_seg: 100.0000
2023/02/12 22:06:19 - mmengine - INFO - Saving checkpoint at 90 iterations
2023/02/12 22:06:20 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:00:09  time: 0.0181  data_time: 0.0047  memory: 721  
2023/02/12 22:06:20 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:08  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:06:20 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:07  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:20 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:07  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:06:20 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:20 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:21 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:06  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:21 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:06  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:06:21 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:21 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:21 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:21 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:05  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:22 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:22 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:05  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:22 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:22 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:22 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:05  time: 0.0154  data_time: 0.0019  memory: 721  
2023/02/12 22:06:22 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:05  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:06:22 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:04  time: 0.0151  data_time: 0.0018  memory: 721  
2023/02/12 22:06:23 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:04  time: 0.0153  data_time: 0.0017  memory: 721  
2023/02/12 22:06:23 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:04  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:23 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:04  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:06:23 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:04  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:06:23 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:04  time: 0.0153  data_time: 0.0019  memory: 721  
2023/02/12 22:06:23 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:23 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:03  time: 0.0151  data_time: 0.0019  memory: 721  
2023/02/12 22:06:24 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:03  time: 0.0158  data_time: 0.0020  memory: 721  
2023/02/12 22:06:24 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:03  time: 0.0158  data_time: 0.0020  memory: 721  
2023/02/12 22:06:24 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:24 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:24 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:03  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:24 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:02  time: 0.0154  data_time: 0.0018  memory: 721  
2023/02/12 22:06:25 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:02  time: 0.0154  data_time: 0.0018  memory: 721  
2023/02/12 22:06:25 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:02  time: 0.0155  data_time: 0.0019  memory: 721  
2023/02/12 22:06:25 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:02  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:06:25 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:06:25 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:25 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:25 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:01  time: 0.0157  data_time: 0.0019  memory: 721  
2023/02/12 22:06:26 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:01  time: 0.0153  data_time: 0.0018  memory: 721  
2023/02/12 22:06:26 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:26 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:26 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0154  data_time: 0.0017  memory: 721  
2023/02/12 22:06:26 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0154  data_time: 0.0018  memory: 721  
2023/02/12 22:06:26 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:27 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:27 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0016  memory: 721  
2023/02/12 22:06:27 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0157  data_time: 0.0018  memory: 721  
2023/02/12 22:06:27 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:06:27 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:06:27 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:27 - mmengine - INFO - per class results:
2023/02/12 22:06:27 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:06:27 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
2023/02/12 22:06:28 - mmengine - INFO - Iter(train) [100/100]  lr: 9.9890e-03  eta: 0:00:00  time: 0.0720  data_time: 0.0030  memory: 1576  loss: 0.1850  decode.loss_ce: 0.1330  decode.acc_seg: 100.0000  aux.loss_ce: 0.0520  aux.acc_seg: 100.0000
2023/02/12 22:06:28 - mmengine - INFO - Saving checkpoint at 100 iterations
2023/02/12 22:06:29 - mmengine - INFO - Iter(val) [ 10/515]    eta: 0:00:09  time: 0.0181  data_time: 0.0048  memory: 721  
2023/02/12 22:06:29 - mmengine - INFO - Iter(val) [ 20/515]    eta: 0:00:08  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:29 - mmengine - INFO - Iter(val) [ 30/515]    eta: 0:00:07  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:29 - mmengine - INFO - Iter(val) [ 40/515]    eta: 0:00:07  time: 0.0155  data_time: 0.0017  memory: 721  
2023/02/12 22:06:29 - mmengine - INFO - Iter(val) [ 50/515]    eta: 0:00:07  time: 0.0152  data_time: 0.0018  memory: 721  
2023/02/12 22:06:30 - mmengine - INFO - Iter(val) [ 60/515]    eta: 0:00:07  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:30 - mmengine - INFO - Iter(val) [ 70/515]    eta: 0:00:06  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:30 - mmengine - INFO - Iter(val) [ 80/515]    eta: 0:00:06  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:30 - mmengine - INFO - Iter(val) [ 90/515]    eta: 0:00:06  time: 0.0153  data_time: 0.0017  memory: 721  
2023/02/12 22:06:30 - mmengine - INFO - Iter(val) [100/515]    eta: 0:00:06  time: 0.0153  data_time: 0.0016  memory: 721  
2023/02/12 22:06:30 - mmengine - INFO - Iter(val) [110/515]    eta: 0:00:06  time: 0.0152  data_time: 0.0018  memory: 721  
2023/02/12 22:06:31 - mmengine - INFO - Iter(val) [120/515]    eta: 0:00:06  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:31 - mmengine - INFO - Iter(val) [130/515]    eta: 0:00:05  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:06:31 - mmengine - INFO - Iter(val) [140/515]    eta: 0:00:05  time: 0.0154  data_time: 0.0018  memory: 721  
2023/02/12 22:06:31 - mmengine - INFO - Iter(val) [150/515]    eta: 0:00:05  time: 0.0152  data_time: 0.0018  memory: 721  
2023/02/12 22:06:31 - mmengine - INFO - Iter(val) [160/515]    eta: 0:00:05  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:31 - mmengine - INFO - Iter(val) [170/515]    eta: 0:00:05  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:06:31 - mmengine - INFO - Iter(val) [180/515]    eta: 0:00:05  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:06:32 - mmengine - INFO - Iter(val) [190/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:32 - mmengine - INFO - Iter(val) [200/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:32 - mmengine - INFO - Iter(val) [210/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:32 - mmengine - INFO - Iter(val) [220/515]    eta: 0:00:04  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:32 - mmengine - INFO - Iter(val) [230/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:32 - mmengine - INFO - Iter(val) [240/515]    eta: 0:00:04  time: 0.0147  data_time: 0.0016  memory: 721  
2023/02/12 22:06:33 - mmengine - INFO - Iter(val) [250/515]    eta: 0:00:04  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:33 - mmengine - INFO - Iter(val) [260/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:33 - mmengine - INFO - Iter(val) [270/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:33 - mmengine - INFO - Iter(val) [280/515]    eta: 0:00:03  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:33 - mmengine - INFO - Iter(val) [290/515]    eta: 0:00:03  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:33 - mmengine - INFO - Iter(val) [300/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:33 - mmengine - INFO - Iter(val) [310/515]    eta: 0:00:03  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:34 - mmengine - INFO - Iter(val) [320/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:34 - mmengine - INFO - Iter(val) [330/515]    eta: 0:00:02  time: 0.0157  data_time: 0.0018  memory: 721  
2023/02/12 22:06:34 - mmengine - INFO - Iter(val) [340/515]    eta: 0:00:02  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:34 - mmengine - INFO - Iter(val) [350/515]    eta: 0:00:02  time: 0.0150  data_time: 0.0018  memory: 721  
2023/02/12 22:06:34 - mmengine - INFO - Iter(val) [360/515]    eta: 0:00:02  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:34 - mmengine - INFO - Iter(val) [370/515]    eta: 0:00:02  time: 0.0155  data_time: 0.0018  memory: 721  
2023/02/12 22:06:34 - mmengine - INFO - Iter(val) [380/515]    eta: 0:00:02  time: 0.0154  data_time: 0.0018  memory: 721  
2023/02/12 22:06:35 - mmengine - INFO - Iter(val) [390/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:35 - mmengine - INFO - Iter(val) [400/515]    eta: 0:00:01  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:35 - mmengine - INFO - Iter(val) [410/515]    eta: 0:00:01  time: 0.0151  data_time: 0.0017  memory: 721  
2023/02/12 22:06:35 - mmengine - INFO - Iter(val) [420/515]    eta: 0:00:01  time: 0.0157  data_time: 0.0019  memory: 721  
2023/02/12 22:06:35 - mmengine - INFO - Iter(val) [430/515]    eta: 0:00:01  time: 0.0149  data_time: 0.0017  memory: 721  
2023/02/12 22:06:35 - mmengine - INFO - Iter(val) [440/515]    eta: 0:00:01  time: 0.0148  data_time: 0.0016  memory: 721  
2023/02/12 22:06:36 - mmengine - INFO - Iter(val) [450/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0018  memory: 721  
2023/02/12 22:06:36 - mmengine - INFO - Iter(val) [460/515]    eta: 0:00:00  time: 0.0149  data_time: 0.0016  memory: 721  
2023/02/12 22:06:36 - mmengine - INFO - Iter(val) [470/515]    eta: 0:00:00  time: 0.0156  data_time: 0.0018  memory: 721  
2023/02/12 22:06:36 - mmengine - INFO - Iter(val) [480/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:36 - mmengine - INFO - Iter(val) [490/515]    eta: 0:00:00  time: 0.0148  data_time: 0.0017  memory: 721  
2023/02/12 22:06:36 - mmengine - INFO - Iter(val) [500/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0017  memory: 721  
2023/02/12 22:06:36 - mmengine - INFO - Iter(val) [510/515]    eta: 0:00:00  time: 0.0150  data_time: 0.0016  memory: 721  
2023/02/12 22:06:37 - mmengine - INFO - per class results:
2023/02/12 22:06:37 - mmengine - INFO - 
+------------+-------+-------+
|   Class    |  IoU  |  Acc  |
+------------+-------+-------+
| background | 98.42 | 100.0 |
| glomeruili |  0.0  |  0.0  |
+------------+-------+-------+
2023/02/12 22:06:37 - mmengine - INFO - Iter(val) [515/515]  aAcc: 98.4200  mIoU: 49.2100  mAcc: 50.0000
